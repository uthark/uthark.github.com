<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>транзакция on Sharing knowledge</title>
    <link>https://uthark.github.io/categories/%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B0%D0%BA%D1%86%D0%B8%D1%8F/</link>
    <description>Recent content in транзакция on Sharing knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Feb 2010 01:20:00 +0000</lastBuildDate>
    
	<atom:link href="https://uthark.github.io/categories/%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B0%D0%BA%D1%86%D0%B8%D1%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Вложенные транзакции в базах данных</title>
      <link>https://uthark.github.io/2010/02/05/blog-post/</link>
      <pubDate>Fri, 05 Feb 2010 01:20:00 +0000</pubDate>
      
      <guid>https://uthark.github.io/2010/02/05/blog-post/</guid>
      <description>Summary: Некоторые особенности вложенных транзакций.Иногда бывает так, что при обработке запроса необходимо открыть ещё одну транзакцию в рамках текущей транзакции. Это называется вложенной транзакцией. Очень многие базы данных не поддерживают вложенные транзакции вообще, например, MySQL и Oracle. А те, что поддерживают, делают это на минимальном уровне, например, Sybase поддерживает только псевдовложенные транзакции.Вложенные транзакции могут быть следующих видов:begin tran select @@trancount /* @@trancount = 1 */ begin tran select @@trancount /* @@trancount = 2 */ begin tran select @@trancount /* @@trancount = 3 */ commit tran commit tran commit tran select @@trancount /* @@ trancount = 0 */ </description>
    </item>
    
    <item>
      <title>Критерии выбора блокировок</title>
      <link>https://uthark.github.io/2009/04/26/blog-post_26/</link>
      <pubDate>Sun, 26 Apr 2009 15:30:00 +0000</pubDate>
      
      <guid>https://uthark.github.io/2009/04/26/blog-post_26/</guid>
      <description>Так как использование блокировок по-разному влияет на производительность, необходимо выбирать, в каких случаях какой вид блокировок лучше использовать.</description>
    </item>
    
    <item>
      <title>Транзакции в реляционных базах данных</title>
      <link>https://uthark.github.io/2009/04/24/blog-post_24/</link>
      <pubDate>Fri, 24 Apr 2009 21:49:00 +0000</pubDate>
      
      <guid>https://uthark.github.io/2009/04/24/blog-post_24/</guid>
      <description>При работе в многопользовательском окружении может возникнуть ситуация, когда разные пользователи или системы обновляют одни и те же данные. Это может привести к ситуации, когда один из пользователей изменит данные, которые уже изменял другой пользователь и приведёт либо к потере данных, либо к переводу данных в неконсистентное состояние. Для решения этой проблемы были придуманы транзакции. Целью транзакции является создание абстракции того, что каждый пользователь - единственный в системе.
Характеристики транзакций В конце 1970-х Джим Грейвыделил следующие характеристики транзакций:</description>
    </item>
    
  </channel>
</rss>