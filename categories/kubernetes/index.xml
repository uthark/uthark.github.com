<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Sharing knowledge</title>
    <link>https://uthark.github.io/categories/kubernetes/</link>
    <description>Recent content in kubernetes on Sharing knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Sep 2020 15:08:37 -0700</lastBuildDate>
    
	<atom:link href="https://uthark.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying in Kubernetes. Checklist.</title>
      <link>https://uthark.github.io/post/2020-09-04-deploy-project-kubernetes-checklist/</link>
      <pubDate>Fri, 04 Sep 2020 15:08:37 -0700</pubDate>
      
      <guid>https://uthark.github.io/post/2020-09-04-deploy-project-kubernetes-checklist/</guid>
      <description>Deploying to kubernetes is easy: create manifest with your Deployment and then kubectl apply it.
The most basic deployment manifest looks like this:
apiVersion: apps/v1 kind: Deployment metadata: labels: app.kubernetes.io/name: test-app name: test-app namespace: default spec: selector: matchLabels: app.kubernetes.io/name: test-app template: metadata: labels: app.kubernetes.io/name: test-app spec: containers: - name: controller image: nginx It works as is, but you may improve reliability of this deployment by configuring additional fields for the manifest.</description>
    </item>
    
    <item>
      <title>Installing Kubernetes on Raspberry Pi</title>
      <link>https://uthark.github.io/post/2020-09-02-installing-kubernetes-raspberrypi/</link>
      <pubDate>Wed, 02 Sep 2020 20:44:30 -0700</pubDate>
      
      <guid>https://uthark.github.io/post/2020-09-02-installing-kubernetes-raspberrypi/</guid>
      <description>Installing kubernetes on Raspberry Pi is easy, but there are few caveats that you need to be aware of.
arm64 is preferred, because 64-bit allows you to use &amp;gt; 4GB of RAM per process.
Enable cgroups Kubernetes relies on cgroups for enforcing limits for the containers, so kernel needs to be booted with cgroups support. On Raspberry, edit /boot/firmware/cmdline.txt and add the following options:
cgroup_enable=memory swapaccount=1 cgroup_memory=1 cgroup_enable=cpuset Reboot after making the changes.</description>
    </item>
    
  </channel>
</rss>