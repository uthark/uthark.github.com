<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>validation on Sharing knowledge</title><link>https://uthark.github.io/categories/validation/</link><description>Recent content in validation on Sharing knowledge</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 19 Jun 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://uthark.github.io/categories/validation/index.xml" rel="self" type="application/rss+xml"/><item><title>Валидация входных параметров с использованием Spring</title><link>https://uthark.github.io/2013/06/19/validation/</link><pubDate>Wed, 19 Jun 2013 00:00:00 +0000</pubDate><guid>https://uthark.github.io/2013/06/19/validation/</guid><description>Очень часто возникает задача проверки входных параметров в сервис на корректность с точки зрения бизнес логики.
Эту задачу можно решить в лоб, написав вручную код валидации в каждом из методов сервиса, например, вот так:
public User save(User user) { if(user == null) { throw new IllegalArgumentException(&amp;#34;User is null&amp;#34;); } // other checks //.</description></item><item><title>Пишем валидатор для Bean Validation API</title><link>https://uthark.github.io/2013/06/19/custom-bean-validator/</link><pubDate>Wed, 19 Jun 2013 00:00:00 +0000</pubDate><guid>https://uthark.github.io/2013/06/19/custom-bean-validator/</guid><description>JSR-303 предоставляет удобный API для проверки валидности объектов, а также входных параметров. Очевидно, что стандартных валидаторов в какой-то момент может быть недостаточно, поэтому необходимо писать собственный.
Хочу показать на примере валидации запроса к MongoDB, как легко это делается.
Создание аннотации @Target({FIELD, PARAMETER}) @Retention(RUNTIME) @Documented @Constraint(validatedBy = {MongoQueryValidator.</description></item></channel></rss>