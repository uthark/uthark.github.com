<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Блокировка on Software Development and related activities</title>
    <link>https://uthark.github.io/categories/%D0%B1%D0%BB%D0%BE%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0/</link>
    <description>Recent content in Блокировка on Software Development and related activities</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Apr 2009 15:30:00 +0000</lastBuildDate>
    
	<atom:link href="https://uthark.github.io/categories/%D0%B1%D0%BB%D0%BE%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Критерии выбора блокировок</title>
      <link>https://uthark.github.io/2009/04/26/blog-post_26/</link>
      <pubDate>Sun, 26 Apr 2009 15:30:00 +0000</pubDate>
      
      <guid>https://uthark.github.io/2009/04/26/blog-post_26/</guid>
      <description>Так как использование блокировок по-разному влияет на производительность, необходимо выбирать, в каких случаях какой вид блокировок лучше использовать.
.nobr br { display: none } 
 Условие Пессимистичная Оптимистичная Сверх-оптимистичная   Конфликты часты  +  −  −    Конфликты редки  −  +  −    Данные только добавляются (например, журнал)  −  −  +    Данные только читаются (справочники) − − +  Критерии выбора блокировок</description>
    </item>
    
    <item>
      <title>Кратко о блокировках в БД</title>
      <link>https://uthark.github.io/2009/04/22/blog-post_22/</link>
      <pubDate>Wed, 22 Apr 2009 23:58:00 +0000</pubDate>
      
      <guid>https://uthark.github.io/2009/04/22/blog-post_22/</guid>
      <description>Блокировка - в реляционных базах данных это установка метки на запись, что запись заблокирована для изменений.
Существует два вида блокировок - оптимистичная и пессимистичная.
Оптимистичная блокировка При оптимистичной блокировке на базе данных реальной блокировки не происходит. Вместо этого используется следующий подход - если во время выполнения транзакции она изменяет данные, которые были изменены после её начала, то транзакция прерывается с исключением. Использование оптимистичных блокировок позволяет избежать взаимных блокировок (dead-lock). Для реализации оптимистичной блокировки часто используется версионирование данных - в таблицу добавляется колонка, которая хранит текущую версию.</description>
    </item>
    
  </channel>
</rss>