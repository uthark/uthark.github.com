<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>unit testing on Oleg Atamanenko</title><link>https://uthark.github.io/categories/unit-testing/</link><description>Recent content in unit testing on Oleg Atamanenko</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Apr 2014 00:10:10 +0000</lastBuildDate><atom:link href="https://uthark.github.io/categories/unit-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Unitils ReflectionAssert</title><link>https://uthark.github.io/2014/04/16/using-unitils-reflectionassert/</link><pubDate>Wed, 16 Apr 2014 00:10:10 +0000</pubDate><guid>https://uthark.github.io/2014/04/16/using-unitils-reflectionassert/</guid><description>Often it is needed to compare two different instances of the class inside test. I.e. we save object into database, then fetch it back from db and we want to be sure if nothing was lost during saving/reading.</description></item><item><title>Using AssertJ</title><link>https://uthark.github.io/2014/04/15/using-assertj/</link><pubDate>Tue, 15 Apr 2014 23:37:49 +0000</pubDate><guid>https://uthark.github.io/2014/04/15/using-assertj/</guid><description>AssertJ is a library which provides fluent strongly-typed assertions to use in unit tests.
Example of assertions written with AssertJ:
import io.github.uthark.blog.assertj.Assertions.assertThat; // ... within @Test User result = userDao.findByLogin(&amp;#34;username&amp;#34;); assertThat(result).</description></item></channel></rss>