<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Factory Bean on Software Development and related activities</title>
    <link>https://uthark.github.io/categories/factory-bean/</link>
    <description>Recent content in Factory Bean on Software Development and related activities</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Jun 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://uthark.github.io/categories/factory-bean/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>@Autowiring EJBs with Spring</title>
      <link>https://uthark.github.io/2013/06/19/autowiring-factorybean/</link>
      <pubDate>Wed, 19 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://uthark.github.io/2013/06/19/autowiring-factorybean/</guid>
      <description>Предположим, что у нас есть проект на Spring, в котором необходимо использовать внешние EJB. Для получения бинов необходимо создавать InitialContext и делать lookup() нужных ejb. Но эту задачу можно автоматизировать и пользоваться @Autowired, то есть код будет выглядеть вот так:
@Service public class UserService { @Autowired private UserRemoteBean userRemoteBean; } Для этого в Spring существует FactoryBean - класс, который знает, как создавать бины нужного типа. Собственно, нам необходимо написать такой класс (код на Scala):</description>
    </item>
    
  </channel>
</rss>