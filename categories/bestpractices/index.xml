<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bestpractices on Sharing knowledge</title>
    <link>https://uthark.github.io/categories/bestpractices/</link>
    <description>Recent content in bestpractices on Sharing knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Sep 2020 15:08:37 -0700</lastBuildDate>
    
	<atom:link href="https://uthark.github.io/categories/bestpractices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying in Kubernetes. Checklist.</title>
      <link>https://uthark.github.io/post/2020-09-04-deploy-project-kubernetes-checklist/</link>
      <pubDate>Fri, 04 Sep 2020 15:08:37 -0700</pubDate>
      
      <guid>https://uthark.github.io/post/2020-09-04-deploy-project-kubernetes-checklist/</guid>
      <description>Deploying to kubernetes is easy: create manifest with your Deployment and then kubectl apply it.
The most basic deployment manifest looks like this:
apiVersion: apps/v1 kind: Deployment metadata: labels: app.kubernetes.io/name: test-app name: test-app namespace: default spec: selector: matchLabels: app.kubernetes.io/name: test-app template: metadata: labels: app.kubernetes.io/name: test-app spec: containers: - name: controller image: nginx It works as is, but you may improve reliability of this deployment by configuring additional fields for the manifest.</description>
    </item>
    
    <item>
      <title>Docker Best Practices</title>
      <link>https://uthark.github.io/post/2020-09-03-docker-best-practices/</link>
      <pubDate>Thu, 03 Sep 2020 22:05:41 -0700</pubDate>
      
      <guid>https://uthark.github.io/post/2020-09-03-docker-best-practices/</guid>
      <description>Introduction After using docker for last several years Iâ€™d like to share best practices that works in production.
Reduce container image size In Cloud Native world infrastructure is disposable and immutable. As result, if your kubernetes pod is rescheduled to another node, new node need to pull docker image.
Small docker images provide the following benefits:
 Smaller attack surface. If image contain only your app binaries and direct dependencies without full blown OS, you will need to apply patches to fix vulnerabilities infrequently.</description>
    </item>
    
  </channel>
</rss>