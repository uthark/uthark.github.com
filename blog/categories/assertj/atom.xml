<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Assertj | Software Development and related activities]]></title>
  <link href="http://uthark.github.io/blog/categories/assertj/atom.xml" rel="self"/>
  <link href="http://uthark.github.io/"/>
  <updated>2017-10-12T19:01:44-04:00</updated>
  <id>http://uthark.github.io/</id>
  <author>
    <name><![CDATA[Oleg Atamanenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using AssertJ]]></title>
    <link href="http://uthark.github.io/blog/2014/04/15/using-assertj/"/>
    <updated>2014-04-15T23:37:49-04:00</updated>
    <id>http://uthark.github.io/blog/2014/04/15/using-assertj</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/joel-costigliola/assertj-core">AssertJ</a> is a library which provides fluent strongly-typed assertions to use in unit tests.</p>

<p>Example of assertions written with <code>AssertJ</code>:</p>

<p>``` java</p>

<p>import io.github.uthark.blog.assertj.Assertions.assertThat;</p>

<p>// &hellip; within @Test
User result = userDao.findByLogin(&ldquo;username&rdquo;);
assertThat(result).</p>

<pre><code>isNotNull().
isActive().
hasLogin("username");
</code></pre>

<p>```</p>

<p>As you can see assertions look much more readable.
The integration of assertj into Maven project is very easy:</p>

<ol>
<li>Update pom.xml in parent module</li>
</ol>


<p>``` xml pom.xml changes in parent module.</p>

<p><properties></p>

<pre><code>&lt;assertj-core.version&gt;1.6.0&lt;/assertj-core.version&gt;
&lt;assertj-assertions-generator-maven-plugin.version&gt;1.2.0&lt;/assertj-assertions-generator-maven-plugin.version&gt;
</code></pre>

<p></properties></p>

<p><dependencyManagement></p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.assertj&lt;/groupId&gt;
    &lt;artifactId&gt;assertj-core&lt;/artifactId&gt;
    &lt;version&gt;${assertj-core.version}&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>

<p></dependencyManagement></p>

<p><pluginManagement></p>

<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.assertj&lt;/groupId&gt;
    &lt;artifactId&gt;assertj-assertions-generator-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;${assertj-assertions-generator-maven-plugin.version}&lt;/version&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;id&gt;generate-assertions&lt;/id&gt;
            &lt;phase&gt;generate-test-sources&lt;/phase&gt;
            &lt;goals&gt;
                &lt;goal&gt;generate-assertions&lt;/goal&gt;
            &lt;/goals&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;
&lt;/plugin&gt;
</code></pre>

<p></pluginManagement></p>

<p>```</p>

<ol>
<li>Update pom.xml in child module</li>
</ol>


<p>``` xml Changes in child module.</p>

<p><dependencies></p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.assertj&lt;/groupId&gt;
    &lt;artifactId&gt;assertj-core&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>

<p></dependencies>
<build></p>

<pre><code>&lt;plugins&gt;
    &lt;plugin&gt;
        &lt;groupId&gt;org.assertj&lt;/groupId&gt;
        &lt;artifactId&gt;assertj-assertions-generator-maven-plugin&lt;/artifactId&gt;
        &lt;configuration&gt;
            &lt;!-- you can define collection packages: --&gt;
            &lt;packages&gt;
                &lt;param&gt;io.github.uthark.blog.assertj&lt;/param&gt;
            &lt;/packages&gt;

            &lt;!-- Or specify classes one by one. --&gt;
            &lt;classes&gt;
                &lt;param&gt;io.github.uthark.blog.assertj.User&lt;/param&gt;
            &lt;/classes&gt;
        &lt;/configuration&gt;
    &lt;/plugin&gt;
&lt;/plugins&gt;
</code></pre>

<p></build></p>

<p>```</p>

<p>After this changes it is possible to generate assertions for the classes you want test:</p>

<p>``` sh</p>

<p>mvn assertj:generate-assertions</p>

<p>```</p>

<p>By default assertj will generate assertion classes in <code>target/generated-test-sources/assertj-assertions/</code>, it is possible to override this behaviour by passing configuration element <code>targetDir</code> to plugin.</p>

<p>Additonal documentation for Maven plugin can be <a href="http://joel-costigliola.github.io/assertj/assertj-assertions-generator-maven-plugin.html">found here</a></p>

<p>Happy hacking!</p>
]]></content>
  </entry>
  
</feed>
